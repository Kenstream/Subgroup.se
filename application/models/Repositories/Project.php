<?php

namespace Repositories;

use Doctrine\ORM\EntityRepository;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Project
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Project extends EntityRepository
{
    public function getTypesAndScenariosUsed($project)
    {
        $queryString = "SELECT a FROM Entities\Invitation a WHERE a.project = " . $project->getId() . " GROUP BY a.scenario";
        $query = $this->_em->createQuery($queryString);

        return $query->getResult();
    }

    public function getUserRoleInProject($project, $user)
    {
        $queryString = "SELECT a FROM Entities\Invitation a WHERE a.project = " . $project->getId() .
            " AND a.user = " . $user->getId();
        $query = $this->_em->createQuery($queryString);
        $result = $query->getResult();

        return (sizeof($result) == 1) ? $result[0]->getType() : null;
    }

    public function getMainCategories($project)
    {
        $mainCategories =  new ArrayCollection;
        $scenariosUsed = new ArrayCollection;

        foreach($project->getInvitations() as $invitation) {
            if(!$scenariosUsed->contains($invitation->getScenario()))
                $scenariosUsed[] = $invitation->getScenario();
        }

        foreach($scenariosUsed as $scenario) {
            $scenarioCategories = $this->_em->getRepository('Entities\Scenario')->getMainCategories($scenario);
            foreach($scenarioCategories as $scenarioCategory) {
                if ((!$mainCategories->contains($scenarioCategory)) && $scenarioCategory->getType() == \Entities\AssessmentCategory::TYPE_MAIN)
                    $mainCategories[] = $scenarioCategory;
            }
        }

        return $mainCategories;
    }
}